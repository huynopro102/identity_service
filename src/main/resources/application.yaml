spring:
  springdoc:
    api-docs:
      enabled: true
    swagger-ui:
      path: /swagger-ui.html
      operations-sorter: alpha
      tags-sorter: alpha
  devtools:
    restart:
      enabled: false
  server:
    port: 9000
  application:
    name: TuanHuy
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/identity_service}
    username: ${SPRING_DATASOURCE_USERNAME:postgres} # Đọc từ biến môi trường, nếu không có thì dùng giá trị mặc định là 'postgres'
    password: ${SPRING_DATASOURCE_PASSWORD:12345}    # Đọc từ biến môi trường, nếu không có thì dùng giá trị mặc định là '12345'
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  thymeleaf:
    enabled: true
    cache: true
    prefix: "classpath:/templates/"
    suffix: ".html"
  logging:
    level:
      root: INFO
      org.springframework.security: DEBUG # display errors detail about spring security
      org.hibernate: DEBUG # display errors detail about query sql
  jwt:
    signerKey: ${JWT_SIGNER_KEY:ZQM5hQ9xYRxNzMA/PsJggsQllKFiOz6mDyd372mZ52OwLlj/MbpzB6DTtCp4aWuv} # Lưu private key của JWT signer vào biến môi trường


api:
  base-url: ${API_BASE_URL:http://localhost:9000} # Giá trị mặc định cho development


google:
  oauth:
    client-id: ${CLIENT_ID:default_client_id}
    client-secret: ${CLIENT_SECRET:default_client_secret}
    redirect-uri: ${REDIRECT_URI:https://developers.google.com/oauthplayground}
    refresh-token: ${REFRESH_TOKEN:default_refresh_token}


cloudinary:
  cloud_name: ${CLOUDINARY_NAME:ducvyera2}
  api_key: ${CLOUDINARY_API_KEY:912285735544359}
  api_secret: ${CLOUDINARY_API_SECRET:AAHfKguEQSl_qoLdq4ktBJdyRtI}
